// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNetwork.Models.Database;

namespace SocialNetwork.Migrations
{
    [DbContext(typeof(SocialNetworkContext))]
    partial class SocialNetworkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SocialNetwork.Models.ChatModels.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("WithId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MeId");

                    b.HasIndex("UserAccountId");

                    b.HasIndex("WithId");

                    b.ToTable("UserChats");
                });

            modelBuilder.Entity("SocialNetwork.Models.ChatModels.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("UserMessages");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.PostComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserFromId")
                        .HasColumnType("int");

                    b.Property<int?>("UserPostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserFromId");

                    b.HasIndex("UserPostId");

                    b.ToTable("UserPostComments");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("UserIdentityId")
                        .HasColumnType("int");

                    b.Property<int?>("UserInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.HasIndex("UserIdentityId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.UserIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostCommentId")
                        .HasColumnType("int");

                    b.Property<int?>("UserAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("UserPostId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("PostCommentId");

                    b.HasIndex("UserAccountId");

                    b.HasIndex("UserPostId");

                    b.ToTable("UserIdentities");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfileImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.UserPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserPosts");
                });

            modelBuilder.Entity("SocialNetwork.Models.ChatModels.Chat", b =>
                {
                    b.HasOne("SocialNetwork.Models.UserModels.UserIdentity", "Me")
                        .WithMany()
                        .HasForeignKey("MeId");

                    b.HasOne("SocialNetwork.Models.UserModels.UserAccount", null)
                        .WithMany("UserChats")
                        .HasForeignKey("UserAccountId");

                    b.HasOne("SocialNetwork.Models.UserModels.UserIdentity", "With")
                        .WithMany()
                        .HasForeignKey("WithId");

                    b.Navigation("Me");

                    b.Navigation("With");
                });

            modelBuilder.Entity("SocialNetwork.Models.ChatModels.Message", b =>
                {
                    b.HasOne("SocialNetwork.Models.ChatModels.Chat", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatId");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.PostComment", b =>
                {
                    b.HasOne("SocialNetwork.Models.UserModels.UserIdentity", "UserFrom")
                        .WithMany()
                        .HasForeignKey("UserFromId");

                    b.HasOne("SocialNetwork.Models.UserModels.UserPost", null)
                        .WithMany("Comments")
                        .HasForeignKey("UserPostId");

                    b.Navigation("UserFrom");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.UserAccount", b =>
                {
                    b.HasOne("SocialNetwork.Models.UserModels.UserAccount", null)
                        .WithMany("FriendRequests")
                        .HasForeignKey("UserAccountId");

                    b.HasOne("SocialNetwork.Models.UserModels.UserIdentity", "UserIdentity")
                        .WithMany()
                        .HasForeignKey("UserIdentityId");

                    b.HasOne("SocialNetwork.Models.UserModels.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoId");

                    b.Navigation("UserIdentity");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.UserIdentity", b =>
                {
                    b.HasOne("SocialNetwork.Models.ChatModels.Message", null)
                        .WithMany("Likes")
                        .HasForeignKey("MessageId");

                    b.HasOne("SocialNetwork.Models.UserModels.PostComment", null)
                        .WithMany("Likes")
                        .HasForeignKey("PostCommentId");

                    b.HasOne("SocialNetwork.Models.UserModels.UserAccount", null)
                        .WithMany("UserFriends")
                        .HasForeignKey("UserAccountId");

                    b.HasOne("SocialNetwork.Models.UserModels.UserPost", null)
                        .WithMany("Likes")
                        .HasForeignKey("UserPostId");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.UserPost", b =>
                {
                    b.HasOne("SocialNetwork.Models.UserModels.UserAccount", null)
                        .WithMany("UserPosts")
                        .HasForeignKey("UserAccountId");
                });

            modelBuilder.Entity("SocialNetwork.Models.ChatModels.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("SocialNetwork.Models.ChatModels.Message", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.PostComment", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.UserAccount", b =>
                {
                    b.Navigation("FriendRequests");

                    b.Navigation("UserChats");

                    b.Navigation("UserFriends");

                    b.Navigation("UserPosts");
                });

            modelBuilder.Entity("SocialNetwork.Models.UserModels.UserPost", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
